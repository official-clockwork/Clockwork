name: Compilation

on:
  workflow_call:

jobs:
  compilation:
    strategy:
      fail-fast: false
      matrix:
        os:
          - runner: ubuntu-latest
            name: linux
          - runner: macos-latest
            name: macos
        arch:
          - x86-64-v3
          - x86-64-v4
        compiler:
          - g++
          - clang++
        exclude:
          - os: macos-latest
            arch: x86-64-v4
    runs-on: ${{ matrix.os.runner }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Obtain Reference Bench
        run: |
          benchref=$(git show -s --format=%B HEAD | sed '1!G;h;$!d' | grep -m 1 -o -x '[[:space:]]*\b[Bb]ench[ :]\+[1-9][0-9]*\b[[:space:]]*' | sed 's/[^0-9]//g')
          if [[ -n "$benchref" ]]; then
            echo "benchref=$benchref" >> $GITHUB_ENV
            echo "Reference bench: $benchref"
          else
            echo "ERROR: No reference bench found"
            exit 1
          fi

      - name: Check Compiler
        run: ${{ matrix.compiler }} -v

      - name: Build Debug
        run: make debug CXX=${{ matrix.compiler }} ARCH=${{ matrix.arch }}

      - name: Clean build
        run: make clean

      - name: Build Release
        run: make CXX=${{ matrix.compiler }} ARCH=${{ matrix.arch }}

      - name: Test
        if: runner.os == 'Linux'
        run: make CXX=${{ matrix.compiler }} test

      - name: Check Bench
        if: runner.os == 'Linux'
        run: |
          obtained=$(eval "./clockwork bench 2>&1" | tail -n 1 | awk '{print $1}')
          if [ "${{ env.benchref }}" != "$obtained" ]; then
            echo "signature mismatch: reference ${{ env.benchref }} obtained: $obtained."
            exit 1
          fi
          echo "signature OK: $obtained"

      - name: Prepare Binaries for Upload
        run: |
          chmod +x clockwork
          mv clockwork clockwork-linux-${{ matrix.arch }}

      - name: Upload Binaries
        if: runner.os == 'Linux' && matrix.compiler == 'g++'
        uses: actions/upload-artifact@v4
        with:
          name: clockwork-linux-${{ matrix.arch }}
          path: clockwork-linux-${{ matrix.arch }}

  windows-compilation:
    strategy:
      fail-fast: false
      matrix:
        include:
          - { arch: x86-64-v3, sys: mingw64, compiler: g++     }
          - { arch: x86-64-v3, sys: ucrt64,  compiler: g++     }
          - { arch: x86-64-v4, sys: ucrt64,  compiler: g++     }
          - { arch: x86-64-v3, sys: clang64, compiler: clang++ }
    runs-on: windows-latest
    defaults:
      run:
        shell: "msys2 {0}"
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set Up MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.sys }}
          install: make cmake coreutils git
          pacboy: toolchain:p

      - name: Obtain Reference Bench
        run: |
          benchref=$(git show -s --format=%B HEAD | sed '1!G;h;$!d' | grep -m 1 -o -x '[[:space:]]*\b[Bb]ench[ :]\+[1-9][0-9]*\b[[:space:]]*' | sed 's/[^0-9]//g')
          if [[ -n "$benchref" ]]; then
            echo "benchref=$benchref" >> $GITHUB_ENV
            echo "Reference bench: $benchref"
          else
            echo "ERROR: No reference bench found"
            exit 1
          fi

      - name: Check Compiler
        run: ${{ matrix.compiler }} -v

      - name: Build Debug
        if: matrix.compiler == 'clang++'
        run: make debug CXX=${{ matrix.compiler }} ARCH=${{ matrix.arch }}

      - name: Clean Build
        run: make clean

      - name: Build Release
        run: make CXX=${{ matrix.compiler }} ARCH=${{ matrix.arch }}

      - name: Test
        run: make CXX=${{ matrix.compiler }} test

      - name: Check Bench
        run: |
          obtained=$(eval "./clockwork.exe bench 2>&1" | tail -n 1 | awk '{print $1}')
          if [ "${{ env.benchref }}" != "$obtained" ]; then
            echo "signature mismatch: reference ${{ env.benchref }} obtained: $obtained."
            exit 1
          fi
          echo "signature OK: $obtained"

      - name: Prepare Binaries for Upload
        run: mv clockwork.exe clockwork-windows-${{ matrix.arch }}.exe

      - name: Upload Binaries
        if: matrix.sys == 'ucrt64'
        uses: actions/upload-artifact@v4
        with:
          name: clockwork-windows-${{ matrix.arch }}
          path: clockwork-windows-${{ matrix.arch }}.exe
