name: Compilation

on:
  workflow_call:

jobs:
  linux-compilation:
    strategy:
      fail-fast: false
      matrix:
        compiler:
          - g++
          - clang++
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Check Compiler
        run: ${{ matrix.compiler }} -v

      - name: Build Debug
        run: make debug CXX=${{ matrix.compiler }}

      - name: Clean build
        run: make clean

      - name: Build Release
        run: make CXX=${{ matrix.compiler }}

      - name: Test
        run: make CXX=${{ matrix.compiler }} test

  macos-compilation:
    strategy:
      fail-fast: false
      matrix:
        compiler:
          - g++
          - clang++
    runs-on: macos-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Check Compiler
        run: ${{ matrix.compiler }} -v

      - name: Build Debug
        run: make debug CXX=${{ matrix.compiler }} ARCH=x86-64-v3

      - name: Clean build
        run: make clean

      - name: Build Release
        run: make CXX=${{ matrix.compiler }} ARCH=x86-64-v3

  windows-compilation:
    strategy:
      fail-fast: false
      matrix:
        include:
          - { sys: mingw64, compiler: g++     }
          - { sys: ucrt64,  compiler: g++     }
          - { sys: clang64, compiler: clang++ }
    runs-on: windows-latest
    defaults:
      run:
        shell: "msys2 {0}"
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set Up MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.sys }}
          install: make cmake
          pacboy: toolchain:p

      - name: Check Compiler
        run: ${{ matrix.compiler }} -v

      - name: Build Debug
        if: matrix.compiler == 'clang++'
        run: make debug CXX=${{ matrix.compiler }}

      - name: Clean Build
        run: make clean

      - name: Build Release
        run: make CXX=${{ matrix.compiler }}

      - name: Test
        run: make CXX=${{ matrix.compiler }} test
