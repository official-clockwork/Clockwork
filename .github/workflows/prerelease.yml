name: Prerelease

on:
  workflow_call:
    secrets:
      token:
        required: true

jobs:
  create_binaries:
    strategy:
      fail-fast: false
      matrix:
        arch:
          - x86-64
          - x86-64-v2
          - x86-64-v3
          - x86-64-v4
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Check Compiler
        run: g++ -v

      - name: Build Release
        run: make CXX=g++ ARCH=${{ matrix.arch }}

      - name: Rename Binaries
        run: mv clockwork clockwork-linux-${{ matrix.arch }}

      - name: Upload Binaries
        uses: actions/upload-artifact@v4
        with:
          name: clockwork-linux-${{ matrix.arch }}
          path: clockwork-linux-${{ matrix.arch }}

  create_prerelease:
    if: github.repository == 'official-clockwork/Clockwork' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Get Commit SHA of Latest Pre-release
        run: |
          # Install required packages
          sudo apt-get update
          sudo apt-get install -y curl jq

          echo "COMMIT_SHA_TAG=$(jq -r 'map(select(.prerelease)) | first | .tag_name' <<< $(curl -s https://api.github.com/repos/${{ github.repository_owner }}/Clockwork/releases))" >> $GITHUB_ENV

      - name: Remove Outdated Pre-release
        run: gh release delete ${{ env.COMMIT_SHA_TAG }} --cleanup-tag
        if: env.COMMIT_SHA_TAG != 'null'
        env:
          GITHUB_TOKEN: ${{ secrets.token }}

      - name: Check Pullable Commits
        id: check_commits
        run: |
          git fetch
          CHANGES=$(git rev-list HEAD..origin/main --count)
          echo "CHANGES=$CHANGES" >> $GITHUB_ENV

      - name: Get last commit SHA
        id: last_commit
        run: echo "COMMIT_SHA=$(git rev-parse HEAD | cut -c 1-8)" >> $GITHUB_ENV

      - name: Get commit date
        id: commit_date
        run: echo "COMMIT_DATE=$(git show -s --date=format:'%Y%m%d' --format=%cd HEAD)" >> $GITHUB_ENV

      - name: Create Prerelease
        if: github.ref_name == 'main' && env.CHANGES == '0'
        uses: softprops/action-gh-release@v2
        with:
          name: Clockwork dev-${{ env.COMMIT_DATE }}-${{ env.COMMIT_SHA }}
          tag_name: clockwork-dev-${{ env.COMMIT_DATE }}-${{ env.COMMIT_SHA }}
          prerelease: true
          files: LICENSE
        env:
          GITHUB_TOKEN: ${{ secrets.token }}

  upload_binaries:
    needs: [create_binaries, create_prerelease]
    strategy:
      fail-fast: false
      matrix:
        arch:
          - x86-64
          - x86-64-v2
          - x86-64-v3
          - x86-64-v4
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: clockwork-linux-${{ matrix.arch }}
          path: artifacts

      - name: Check Pullable Commits
        id: check_commits
        run: |
          git fetch
          CHANGES=$(git rev-list HEAD..origin/main --count)
          echo "CHANGES=$CHANGES" >> $GITHUB_ENV

      - name: Get last commit SHA
        id: last_commit
        run: echo "COMMIT_SHA=$(git rev-parse HEAD | cut -c 1-8)" >> $GITHUB_ENV

      - name: Get commit date
        id: commit_date
        run: echo "COMMIT_DATE=$(git show -s --date=format:'%Y%m%d' --format=%cd HEAD)" >> $GITHUB_ENV

      - name: Create Prerelease
        if: github.ref_name == 'main' && env.CHANGES == '0'
        uses: softprops/action-gh-release@v2
        with:
          name: Clockwork dev-${{ env.COMMIT_DATE }}-${{ env.COMMIT_SHA }}
          tag_name: clockwork-dev-${{ env.COMMIT_DATE }}-${{ env.COMMIT_SHA }}
          prerelease: true
          files: artifacts/clockwork-linux-${{ matrix.arch }}
        env:
          GITHUB_TOKEN: ${{ secrets.token }}
